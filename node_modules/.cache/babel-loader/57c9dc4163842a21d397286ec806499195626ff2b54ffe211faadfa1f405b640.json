{"ast":null,"code":"function Auth(values) {\n  const error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^[a-zA-Z0-9!@#$%^&*()_+}{\":;?/>.<,|\\\\~`\\-=[\\]\\\\';,/]{8,}$/;\n  const phonePattern = /^[0-9]{10}$/;\n  const username_pattern = /^[a-zA-Z0-9]{3,}$/;\n  if (!values.FirstName) {\n    error.FullName = \"FirstName should not be empty\";\n  }\n  if (!values.LastName) {\n    error.FullName = \"LastName should not be empty\";\n  }\n  if (!values.Email) {\n    error.Email = \"Email should not be empty\";\n  } else if (!email_pattern.test(values.Email)) {\n    error.Email = \"Invalid email format\";\n  }\n  if (!values.PhoneNumber) {\n    error.PhoneNumber = \"PhoneNumber should not be empty\";\n  } else if (!phonePattern.test(values.Phone)) {\n    error.Phone = \"PhoneNumber number must be 10 digits\";\n  }\n  if (!values.Password) {\n    error.Password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.Password)) {\n    error.Password = \"Password must be at least 8 characters long\";\n  }\n  if (!values.ConfirmPassword) {\n    error.ConfirmPassword = \"Confirm Password should not be empty\";\n  } else if (String(values.ConfirmPassword) !== String(values.Password)) {\n    error.ConfirmPassword = \"Confirm Password and Password didn't match\";\n  }\n  return error;\n}\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["Auth","values","error","email_pattern","password_pattern","phonePattern","username_pattern","FirstName","FullName","LastName","Email","test","PhoneNumber","Phone","Password","ConfirmPassword","String","_c","$RefreshReg$"],"sources":["C:/Users/FYZU/weddingproject/src/Pages/Register/Auth.jsx"],"sourcesContent":["function Auth(values) {\r\n    const error = {};\r\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const password_pattern =/^[a-zA-Z0-9!@#$%^&*()_+}{\":;?/>.<,|\\\\~`\\-=[\\]\\\\';,/]{8,}$/;\r\n    const phonePattern = /^[0-9]{10}$/;\r\n    const username_pattern = /^[a-zA-Z0-9]{3,}$/;\r\n    \r\n    if (!values.FirstName) {\r\n        error.FullName = \"FirstName should not be empty\";\r\n    }\r\n    if (!values.LastName) {\r\n        error.FullName = \"LastName should not be empty\";\r\n    }\r\n    if (!values.Email) {\r\n        error.Email = \"Email should not be empty\";\r\n    } else if (!email_pattern.test(values.Email)) {\r\n        error.Email = \"Invalid email format\";\r\n    }\r\n    if (!values.PhoneNumber) {\r\n        error.PhoneNumber = \"PhoneNumber should not be empty\";\r\n    }\r\n    else if (!phonePattern.test(values.Phone)) {\r\n        error.Phone = \"PhoneNumber number must be 10 digits\";\r\n    }\r\n\r\n    if (!values.Password) {\r\n        error.Password = \"Password should not be empty\";\r\n    } else if (!password_pattern.test(values.Password)) {\r\n        error.Password = \"Password must be at least 8 characters long\";\r\n    }\r\n\r\n    if (!values.ConfirmPassword) {\r\n        error.ConfirmPassword = \"Confirm Password should not be empty\";\r\n    } else if (String(values.ConfirmPassword) !== String(values.Password)) {\r\n        error.ConfirmPassword = \"Confirm Password and Password didn't match\";\r\n    }\r\n\r\n\r\n    return error;\r\n}\r\n\r\nexport default Auth;"],"mappings":"AAAA,SAASA,IAAIA,CAACC,MAAM,EAAE;EAClB,MAAMC,KAAK,GAAG,CAAC,CAAC;EAChB,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAE,2DAA2D;EACnF,MAAMC,YAAY,GAAG,aAAa;EAClC,MAAMC,gBAAgB,GAAG,mBAAmB;EAE5C,IAAI,CAACL,MAAM,CAACM,SAAS,EAAE;IACnBL,KAAK,CAACM,QAAQ,GAAG,+BAA+B;EACpD;EACA,IAAI,CAACP,MAAM,CAACQ,QAAQ,EAAE;IAClBP,KAAK,CAACM,QAAQ,GAAG,8BAA8B;EACnD;EACA,IAAI,CAACP,MAAM,CAACS,KAAK,EAAE;IACfR,KAAK,CAACQ,KAAK,GAAG,2BAA2B;EAC7C,CAAC,MAAM,IAAI,CAACP,aAAa,CAACQ,IAAI,CAACV,MAAM,CAACS,KAAK,CAAC,EAAE;IAC1CR,KAAK,CAACQ,KAAK,GAAG,sBAAsB;EACxC;EACA,IAAI,CAACT,MAAM,CAACW,WAAW,EAAE;IACrBV,KAAK,CAACU,WAAW,GAAG,iCAAiC;EACzD,CAAC,MACI,IAAI,CAACP,YAAY,CAACM,IAAI,CAACV,MAAM,CAACY,KAAK,CAAC,EAAE;IACvCX,KAAK,CAACW,KAAK,GAAG,sCAAsC;EACxD;EAEA,IAAI,CAACZ,MAAM,CAACa,QAAQ,EAAE;IAClBZ,KAAK,CAACY,QAAQ,GAAG,8BAA8B;EACnD,CAAC,MAAM,IAAI,CAACV,gBAAgB,CAACO,IAAI,CAACV,MAAM,CAACa,QAAQ,CAAC,EAAE;IAChDZ,KAAK,CAACY,QAAQ,GAAG,6CAA6C;EAClE;EAEA,IAAI,CAACb,MAAM,CAACc,eAAe,EAAE;IACzBb,KAAK,CAACa,eAAe,GAAG,sCAAsC;EAClE,CAAC,MAAM,IAAIC,MAAM,CAACf,MAAM,CAACc,eAAe,CAAC,KAAKC,MAAM,CAACf,MAAM,CAACa,QAAQ,CAAC,EAAE;IACnEZ,KAAK,CAACa,eAAe,GAAG,4CAA4C;EACxE;EAGA,OAAOb,KAAK;AAChB;AAACe,EAAA,GAvCQjB,IAAI;AAyCb,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}